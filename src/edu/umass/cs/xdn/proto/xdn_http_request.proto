// To generate the class, from the project root directory:
// protoc --java_out=./src src/edu/umass/cs/xdn/proto/xdn_http_request.proto

syntax = "proto3";

package xdn;

option java_package = "edu.umass.cs.xdn.proto";
option java_outer_classname = "XdnHttpRequestProto";

message XdnHttpRequest {

  // Defines Http Methods supported by XDN.
  enum HttpMethod {
    GET = 0;
    HEAD = 1;
    POST = 2;
    PUT = 3;
    DELETE = 4;
    CONNECT = 5;
    OPTIONS = 6;
    PATCH = 7;
  }

  // Defines Http Protocol supported by XDN.
  enum HttpProtocolVersion {
    HTTP_1_0 = 0;
    HTTP_1_1 = 1;
  }

  // Defines the pair of name and value for a header in Request and Response.
  message Header {
    string name = 1;
    string value = 2;
  }

  // Defines Http Response, embedded inside a Request.
  message Response {
    // Protocol used for the response. Examples: "HTTP/1.1", "HTTP/2".
    HttpProtocolVersion protocol_version = 1;

    // The response code indicating the status of response.
    // Examples: 200, 404.
    int32 status_code = 2;

    // All headers in this Http Response.
    repeated Header headers = 3;

    // The response content, can be empty.
    optional bytes response_body = 4;
  }

  // Protocol used for the request. Examples: "HTTP/1.1", "HTTP/2".
  HttpProtocolVersion protocol_version = 1;

  // The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`.
  HttpMethod request_method = 2;

  // The request URL. Example: `"/api/books?color=red"`.
  string request_uri = 3;

  // All headers for this request.
  repeated Header request_headers = 4;

  // The request content, can be empty.
  optional bytes request_body = 5;

  // The response for this request, empty if there is no response yet.
  optional Response response = 6;
}